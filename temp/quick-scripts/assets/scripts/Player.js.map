{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","MaxMoveSpeed","accel","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","repeatForever","sequence","setInputControl","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","accLeft","accRight","d","onKeyReleased","node","TOUCH_ONE_BY_ONE","onTouchBegan","touch","touchLoc","getLocation","x","winSize","width","onTouchEnded","onLoad","jumpAction","runAction","xSpeed","start","update","dt","Math","abs"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 跳跃高度\r\n        jumpHeight: 0,\r\n        // 跳跃持续需时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        MaxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    // 跳跃动画\r\n    setJumpAction () {\r\n        // 创建动作\r\n        // 向上跳跃\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 向下掉落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0,-this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // 重复\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\r\n    },\r\n    // 控制部分\r\n    setInputControl () {\r\n        var self = this;\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            onKeyPressed: function(keyCode, event){\r\n                switch(keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                }\r\n            },\r\n            onKeyReleased: function(keyCode, event) {\r\n                switch(keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n                }\r\n            }\r\n        } ,self.node);\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.TOUCH_ONE_BY_ONE,\r\n            onTouchBegan: function(touch, event){\r\n                var touchLoc = touch.getLocation();\r\n                if (touchLoc.x > cc.winSize.width / 2) {\r\n                    self.accLeft = false;\r\n                    self.accRight = true;\r\n                } else {\r\n                    self.accLeft = true;\r\n                    self.accRight = false;\r\n                }\r\n            },\r\n            onTouchEnded: function(touch, event) {\r\n                self.accLeft = false;\r\n                self.accRight = false;\r\n            }\r\n        } ,self.node);\r\n    },\r\n\r\n    onLoad () {\r\n        // 初始化函数\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n\r\n        this.xSpeed = 0;\r\n        \r\n        this.setInputControl();\r\n    },\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel*dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel*dt;\r\n        }\r\n\r\n        if (Math.abs(this.xSpeed) > this.MaxMoveSpeed) {\r\n            this.xSpeed = this.MaxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n        // 更新位置\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n});\r\n"]}